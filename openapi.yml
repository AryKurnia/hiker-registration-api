openapi: '3.0.3'
info:
  title: Hiker Registration API
  version: '1.0.0'
  description: Proyek ini bertujuan untuk mendigitalisasi proses pendaftaran pendaki dan penjadwalan pendakian. Dengan adanya sistem ini, pengelola jalur pendakian tidak lagi perlu mencatat data pendaki secara manual di buku atau kertas. Seluruh pencatatan dapat dilakukan secara digital, sehingga lebih aman, efisien, dan mudah diakses melalui internet.
  contact:
    name: Ary Kurnia
    email: aryk922@gmail.com
servers:
  - url: http://localhost:3000
paths:
  /hikers:
    post:
      tags:
        - Hikers
      summary: Mendaftarkan pendaki
      description: Endpoin untuk melakukan pendataan identitas pendaki sebelum melakukan penjadwalan pendakian, pendaki harus terdaftar terlebih dahulu.
      security:
        - ApiKeyAuth: []
      requestBody:
        $ref: '#/components/requestBodies/HikerObject'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HikerResponse201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HikerResponse400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serverErrorResponse500'
    get:
      tags:
        - Hikers
      summary: Mendapatkan daftar pendaki
      description: Endpoin untuk mendapatkan daftar pendaki yang telah terdaftar
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HikerResponse200'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
  requestBodies:
    HikerObject:
      content:
        application/json:
          schema:
            type: object
            $ref: '#/components/schemas/HikerObject'
  schemas:
    HikerObject:
      properties:
        name:
          type: string
          minLength: 2
          maxLength: 50
          example: Budi Ari
        nik:
          type: string
          minLength: 16
          maxLength: 16
          example: 1234567890123456
        jenisKelamin:
          type: string
          example: L
          enum:
            - L
            - P
        alamat:
          type: string
          example: Kab.Bulukumba, Kec. -, Des. -
        noHP:
          type: string
          format: phone
          pattern: ^62\d{9,13}$
          example: 6281234567890
        email:
          type: string
          format: email
          example: budi@gmail.com
        tglLahir:
          type: string
          format: date-time
          example: 2000-01-01
    HikerResponse200:
      type: object
      properties:
        status:
          type: string
          example: success
        data:
          type: array
          items:
            type: object
            allOf:
              - type: object
                properties:
                  id:
                    type: integer
                    format: int32
                    minimum: 1
                    example: 1
              - $ref: '#/components/schemas/HikerObject'
        message:
          type: string
          example: Data pendaki berhasil didapatkan

    HikerResponse201:
      type: object
      properties:
        status:
          type: string
          example: success
        data:
          type: object
          allOf:
            - type: object
              properties:
                id:
                  type: integer
                  format: int32
                  minimum: 1
                  example: 1
            - $ref: '#/components/schemas/HikerObject'
        message:
          type: string
          example: Data pendaki berhasil ditambahkan
    HikerResponse400:
      type: object
      properties:
        status:
          type: string
          example: error
        message:
          type: string
          example: Email 'budi@gmail.com' sudah terdaftar
        errorCode:
          type: string
          example: CONFLICT
    serverErrorResponse500:
      type: object
      properties:
        status:
          type: string
          example: error
        message:
          type: string
          example: Terjadi kesalahan pada server
    
  
              
